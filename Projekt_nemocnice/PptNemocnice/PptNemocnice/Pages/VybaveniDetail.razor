@page "/vybaveni/{Id:guid}"
@using PptNemocnice
@inject HttpClient Http

@if (item is null || list_revize is null)
{
    <div class="loader"></div>
    return;
}
<h1>@item.Name</h1>

<div class="divTable">
    <div class="divTableBody">
        <div class="divTableRow">
            <div class="divTableCell"><b>ID</b></div>
            <div class="divTableCell">@item.Id</div>
        </div>
        <div class="divTableRow">
            <div class="divTableCell"><b>Název</b></div>
            <div class="divTableCell">@item.Name</div>
        </div>
        <div class="divTableRow">
            <div class="divTableCell"><b>Datum nákupu</b></div>
            <div class="divTableCell">@item.BoughtDate.ToShortDateString()</div>
        </div>
        <div class="divTableRow">
            <div class="divTableCell"><b>Datum poslední revize</b></div>
            @if (item.LastRevisionDate == default(DateTime))
            {
                <div class="divTableCell">?</div>
            }
            else
            {
                <div class="divTableCell">@item.LastRevisionDate.ToShortDateString()</div>
            }

        </div>
        <div class="divTableRow">
            <div class="divTableCell"><b>Potřebuje revizi?</b></div>
            @if (item.NeedsRevision)
            {
                <div class="divTableCell">Ano</div>
            }
            else
            {
                <div class="divTableCell">Ne</div>
            }
        </div>
        <div class="divTableRow">
            <div class="divTableCell"><b>Cena</b></div>
            <div class="divTableCell">@item.PriceCzk CZK</div>
        </div>
    </div>
</div>

<h3>Provedené revize</h3>
<div class="divTable">
    <div class="divTableBody">
        <div class="divTableRow">
            <div class="divTableCell"><b>ID revize</b></div>
            <div class="divTableCell"><b>Název</b></div>
            <div class="divTableCell"><b>Datum provedení</b></div>
        </div>
        @foreach (VybaveniSRevizemiModel item in list_revize)
        {
            <div class="divTableRow">
                <div class="divTableCell">@item.Id</div>
                <div class="divTableCell">@item.Name</div>
                <div class="divTableCell">@item.DateTime</div>
            </div>
        }
    </div>

</div>

@code {

    [Parameter]
    public Guid Id { get; set; }

    VybaveniModel? item { get; set; }

    List<VybaveniSRevizemiModel>? list_revize;

    protected override async Task OnInitializedAsync()
    {
        item = await Http.GetFromJsonAsync<VybaveniModel>($"vybaveni/{Id}");
        list_revize = await Http.GetFromJsonAsync<List<VybaveniSRevizemiModel>>($"revize/detail/{Id}");
        @*
            Moc jsem nepochopil, jak je myšleno to VybaveniSRevizemaModel. Ze zadání vyplývá,
            že musíme namapovat celý ten model tak aby tam byl seznam všech revizí. Nepochopil jsem ale
            proč, protože k tomu seznamu revizí můžu přistupovat samostatně, respektive udělat si seznam
            revizí, kde je VybaveniId stejné jako Id vybavení, jehož detail si chci prohlédnout. V tom
            VybaveniSRevizemaModel jsem namapoval třídu Revize, protože k ní v Pptnemocnice nemám přístup a
            dělám foreach cyklus na ten seznam, který dostanu. Pokud tento postup je špatně, tak to samozřejmě
            předělám
        *@
    }
}
